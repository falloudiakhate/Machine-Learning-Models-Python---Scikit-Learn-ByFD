##########################################################################################
##########################################################################################
##################                                                          ##############
##################  		LINEAR REGRESSION MODEL @ByFD October 2019  ##############
##################                                                          ##############
##########################################################################################
##########################################################################################

                  ##########################################################
                  ################  WITH PYTHON ONLY #######################
                  ##########################################################

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
==========================================================================================

df = pd.read_csv("house.csv")

===========================================================================================

df.head()

  loyer   surface
0   1330  37
1   1400  32
2   904   26
3   955   30
4   2545  70

============================================================================================

df.info()

<class 'pandas.core.frame.DataFrame'>
RangeIndex: 545 entries, 0 to 544
Data columns (total 2 columns):
loyer      545 non-null int64
surface    545 non-null int64
dtypes: int64(2)
memory usage: 8.6 KB

============================================================================================

df.describe()

  loyer   surface
count   545.000000  545.000000
mean  2307.502752   63.236697
std   2201.364353   48.716475
min   488.000000  11.000000
25%   1255.000000   32.000000
50%   1795.000000   50.000000
75%   2600.000000   76.000000
max   25000.000000  415.000000

============================================================================================

plt.plot(df["surface"], df["loyer"], "ro")

=============================================================================================

X = np.matrix([np.ones(df.shape[0]), df["surface"]]).T
Y = np.matrix(df["loyer"]).T

=============================================================================================

theta = (X.T.dot(X).I).dot(X.T).dot(Y)

=============================================================================================

plt.plot(df["surface"], df["loyer"], "oy")
plt.plot([0, 250], [theta.item(0), theta.item(0) + 250*theta.item(1)], "red")
plt.show()

=============================================================================================


                      ##########################################################
                      ################  SCIKIT-LEARN         ###################
                      ##########################################################


from sklearn.linear_model import LinearRegression
#creation du modele
reg=LinearRegression()
#entra√Ænement du models
reg.fit(X,y)
print(reg.intercept_)
print(reg.coef_)

==============================================================================================

a = np.matrix(reg.coef_)

b = np.matrix(reg.intercept_)

=================================================================================================

plt.plot(df["surface"], df["loyer"], "oy")
plt.plot([0, 250], [b.item(0), b.item(0) + 250*a.item(1)], "red")
plt.show()

=================================================================================================

