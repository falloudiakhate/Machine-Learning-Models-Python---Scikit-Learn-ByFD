###################################################################################################
###################################################################################################
#######################                                              ##############################
####################### POLYNOMIAL REGRESSION WITH SCIKITLEARN @ByFD ##############################
#######################                                              ##############################
###################################################################################################
###################################################################################################

===================================================================================================

import numpy as np
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt

===================================================================================================

X = 6 * np.random.rand(100, 1) - 3

Y = 2 * X**2 + X + 2 + np.random.randn(100, 1)

===================================================================================================

plt.plot(X, Y, "ro")
plt.show()

===================================================================================================

poly = PolynomialFeatures(degree = 2, include_bias=False)

X_poly = poly.fit_transform(X)

===================================================================================================


lin_reg = LinearRegression()

lin_reg.fit(X_poly, Y)

===================================================================================================

lin_reg.intercept_

lin_reg.coef_

===================================================================================================


plt.plot(X, Y, "bo")
X_new = np.linspace(-3, 3, 100)
Y_predict = lin_reg.coef_.item(1) * X_new**2 + lin_reg.coef_.item(0) * X_new + lin_reg.intercept_
plt.plot(Z, Y_predict, "red")
plt.show()


===================================================================================================

lin_reg.score(X_poly, Y)

lin_reg.predict(X_poly)

===================================================================================================



